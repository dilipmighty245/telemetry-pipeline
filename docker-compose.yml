version: '3.8'

services:
  # etcd for enhanced message queue and coordination
  etcd:
    image: quay.io/coreos/etcd:v3.5.9
    container_name: telemetry-etcd
    ports:
      - "2379:2379"
      - "2380:2380"
    command:
      - /usr/local/bin/etcd
      - --name=etcd1
      - --data-dir=/etcd-data
      - --listen-client-urls=http://0.0.0.0:2379
      - --advertise-client-urls=http://localhost:2379
      - --listen-peer-urls=http://0.0.0.0:2380
      - --initial-advertise-peer-urls=http://0.0.0.0:2380
      - --initial-cluster=etcd1=http://0.0.0.0:2380
      - --initial-cluster-token=etcd-cluster-1
      - --initial-cluster-state=new
      - --auto-compaction-retention=1h
    volumes:
      - etcd_data:/etcd-data
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health", "--endpoints=http://localhost:2379"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped





  # Telemetry Streamer
  streamer:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.streamer
    container_name: telemetry-streamer
    environment:

      - LOG_LEVEL=info
    volumes:
      - ./dcgm_metrics_20250718_134233.csv:/app/dcgm_metrics_20250718_134233.csv:ro
    command: [
      "-csv=dcgm_metrics_20250718_134233.csv",
      "-loop=true",
      "-batch-size=50",
      "-stream-interval=2s",
      "-log-level=info"
    ]
    restart: unless-stopped
    depends_on: []

  # Telemetry Collector
  collector:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.collector
    container_name: telemetry-collector
    environment:
      - LOG_LEVEL=info
    command: [
      "-batch-size=100",
      "-poll-interval=1s",
      "-log-level=info"
    ]
    restart: unless-stopped
    depends_on:
      etcd:
        condition: service_healthy

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.api-gateway
    container_name: telemetry-api-gateway
    environment:
      - LOG_LEVEL=info
      - PORT=8080
    ports:
      - "8080:8080"
    command: [
      "-port=8080",
      "-log-level=info"
    ]
    restart: unless-stopped
    depends_on:
      etcd:
        condition: service_healthy



volumes:
  etcd_data:


networks:
  default:
    name: telemetry-network
