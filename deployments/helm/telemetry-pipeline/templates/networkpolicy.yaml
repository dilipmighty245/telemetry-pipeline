{{- if .Values.networkPolicy.enabled }}
---
{{- if .Values.streamer.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "telemetry-pipeline.fullname" . }}-streamer
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "telemetry-pipeline.labels" . | nindent 4 }}
    {{- include "telemetry-pipeline.deploymentModeLabels" . | nindent 4 }}
    app.kubernetes.io/component: streamer
spec:
  podSelector:
    matchLabels:
      {{- include "telemetry-pipeline.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: streamer
  policyTypes:
  - Egress
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  # Allow Redis connection
  - to: []
    ports:
    - protocol: TCP
      port: {{ include "telemetry-pipeline.redisPort" . }}
  {{- if .Values.externalRedis.enabled }}
  # Allow external Redis connection
  - to: []
    ports:
    - protocol: TCP
      port: 6380  # Redis Sentinel port
  {{- end }}
  {{- with .Values.networkPolicy.egress }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
{{- end }}
---
{{- if .Values.collector.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "telemetry-pipeline.fullname" . }}-collector
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "telemetry-pipeline.labels" . | nindent 4 }}
    {{- include "telemetry-pipeline.deploymentModeLabels" . | nindent 4 }}
    app.kubernetes.io/component: collector
spec:
  podSelector:
    matchLabels:
      {{- include "telemetry-pipeline.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: collector
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow health checks
  - from: []
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  # Allow Redis connection
  - to: []
    ports:
    - protocol: TCP
      port: {{ include "telemetry-pipeline.redisPort" . }}
  # Allow database connection
  - to: []
    ports:
    - protocol: TCP
      port: {{ include "telemetry-pipeline.databasePort" . }}
  {{- with .Values.networkPolicy.egress }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
{{- end }}
---
{{- if .Values.apiGateway.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "telemetry-pipeline.fullname" . }}-api-gateway
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "telemetry-pipeline.labels" . | nindent 4 }}
    {{- include "telemetry-pipeline.deploymentModeLabels" . | nindent 4 }}
    app.kubernetes.io/component: api-gateway
spec:
  podSelector:
    matchLabels:
      {{- include "telemetry-pipeline.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api-gateway
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow HTTP traffic
  - from: []
    ports:
    - protocol: TCP
      port: {{ .Values.apiGateway.config.port }}
  {{- with .Values.networkPolicy.ingress }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  # Allow database connection
  - to: []
    ports:
    - protocol: TCP
      port: {{ include "telemetry-pipeline.databasePort" . }}
  {{- with .Values.networkPolicy.egress }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
{{- end }}
{{- end }}
