# Multi-stage build for Nexus Gateway
FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates tzdata

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the binary
RUN CGO_ENABLED=0 GOOS=linux go build \
    -ldflags "-s -w -X main.version=$(git describe --tags --always --dirty 2>/dev/null || echo 'v0.2.0') -X main.buildTime=$(date -u '+%Y-%m-%d_%H:%M:%S')" \
    -o nexus-gateway \
    ./cmd/nexus-gateway

# Final stage
FROM alpine:3.18

# Install runtime dependencies
RUN apk add --no-cache ca-certificates tzdata curl

# Create non-root user
RUN addgroup -g 65534 -S telemetry && \
    adduser -u 65534 -S -G telemetry telemetry

# Create directories
RUN mkdir -p /app/logs /tmp && \
    chown -R telemetry:telemetry /app /tmp

# Copy binary from builder
COPY --from=builder /app/nexus-gateway /app/nexus-gateway

# Set ownership
RUN chown -R telemetry:telemetry /app

# Switch to non-root user
USER telemetry

# Set working directory
WORKDIR /app

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose port
EXPOSE 8080

# Set default environment variables
ENV LOG_LEVEL=info
ENV CLUSTER_ID=k8s-cluster
ENV PORT=8080
ENV ENABLE_GRAPHQL=true
ENV ENABLE_WEBSOCKET=true
ENV ENABLE_CORS=true

# Run the binary
ENTRYPOINT ["/app/nexus-gateway"]
